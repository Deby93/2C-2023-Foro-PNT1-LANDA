@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model IEnumerable<Foro.Entrada>

@{
    ViewData["Title"] = "Index";
    int? idEntradaConMasDislikes = ViewBag.EntradaConMasDislikesId as int?;
}

<h1>Entradas</h1>
<style>

    /* Estilo para el botón de privacidad */
    .privacy-btn {
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        color: white;
        cursor: default;
    }

        .privacy-btn.privada {
            background-color: #dc3545; /* Rojo para "Privada" */
        }

        .privacy-btn.publica {
            background-color: #28a745; /* Verde para "Pública" */
        }
</style>
<p>
    @if (User.Identity.IsAuthenticated)
    {
        <a asp-action="Create">Crear una entrada</a>
    }
</p>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Titulo)</th>
            <th>@Html.DisplayNameFor(model => model.Fecha)</th>
            <th>@Html.DisplayNameFor(model => model.Privada)</th>
            <th>Likes</th>
            <th>Dislikes</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entrada in Model)
        {
            var isDislikedEntry = idEntradaConMasDislikes.HasValue && entrada.Id == idEntradaConMasDislikes.Value;

            int totalLikes = 0;
            int totalDislikes = 0;
            if (entrada.Preguntas != null && entrada.Preguntas.Any())
            {
                totalLikes = entrada.Preguntas.Sum(p => p.Respuestas.Sum(r => r.Reacciones.Count(re => re.MeGusta.HasValue && re.MeGusta.Value)));
                totalDislikes = entrada.Preguntas.Sum(p => p.Respuestas.Sum(r => r.Reacciones.Count(re => re.MeGusta.HasValue && !re.MeGusta.Value)));
            }

            <tr class="@(isDislikedEntry ? "table-danger" : "")">
                <td>@Html.DisplayFor(modelItem => entrada.Titulo)</td>
                <td>@Html.DisplayFor(modelItem => entrada.Fecha)</td>
                <td>
                    @if (entrada.Privada.HasValue)
                    {
                        @if (entrada.Privada.Value)
                        {
                            <form asp-controller="Entradas" asp-action="SolicitudesPendientes" method="get">
                                <input type="hidden" name="entradaId" value="@entrada.Id" />
                                <button type="submit" class="privacy-btn privada">
                                    Privada
                                </button>
                            </form>
                        }
                        else
                        {
                            <a asp-controller="Entradas" asp-action="details" asp-route-id="@entrada.Id" class="btn privacy-btn publica">Pública</a>
                        }
                    }
                    else
                    {
                        <span class="badge bg-secondary">No especificado</span>
                    }
                </td>
                <td>@totalLikes</td>
                <td>@totalDislikes</td>
                <td>
                    <a asp-action="Details" asp-route-id="@entrada.Id">Detalles</a>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <a asp-action="Edit" asp-route-id="@entrada.Id">Editar</a>

                        @if ((bool)isDislikedEntry && totalDislikes >= Config.UMBRAL_DISLIKES)
                        {
                            <form method="post" asp-action="Delete" asp-route-id="@entrada.Id" onsubmit="return confirm('¿Estás seguro de que deseas eliminar esta entrada?');">
                                <button type="submit" class="btn btn-danger">Borrar</button>
                            </form>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
