@model IEnumerable<Foro.Respuesta>

@{
    ViewData["Title"] = "Details";
   
    var pregunta = ViewBag.Pregunta as Foro.Pregunta;
    int UsuarioId = 0;
    if (User.Claims.Any())
    {
        UsuarioId = Int32.Parse(User.Claims.First().Value);
    }

    int respuestaMasLikes = ViewBag.idMasLikes ?? 0;
    int respuestaMasDislike = ViewBag.idMasDisLikes ?? 0;
}

<style>
    .highlighted {
        font-weight: bold;
    }

    .like-row {
        background-color: #d4edda !important;
        color: #155724;
    }

    .dislike-row {
        background-color: #f8d7da !important;
        color: #721c24;
    }


    .response-card {
        margin-bottom: 20px;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .response-card-header {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .response-card-body {
        margin-top: 10px;
    }

    .response-actions i {
        cursor: pointer;
        margin-right: 10px;
    }

        .response-actions i.liked {
            color: green;
        }

        .response-actions i.disliked {
            color: red;
        }
</style>

<h1 class="btn-primary text-center text-white">@pregunta.Descripcion</h1>
<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2 highlighted">
            @Html.DisplayNameFor(p => pregunta.Fecha)
        </dt>
        <dd class="col-sm-10">
            @pregunta.Fecha
        </dd>
        <dt class="col-sm-2 highlighted">
            @Html.DisplayNameFor(p => pregunta.Miembro.NombreCompleto)
        </dt>
        <dd class="col-sm-10">
            @pregunta.Miembro.NombreCompleto
        </dd>
        <dt class="col-sm-2 highlighted">
            @Html.DisplayNameFor(p => pregunta.Descripcion)
        </dt>
        <dd class="col-sm-10">
            @pregunta.Descripcion
        </dd>
        <dt class="col-sm-2 highlighted">
            Estado
        </dt>
        <dd class="col-sm-10">
            @((bool)pregunta.Activa ? "Activa" : "Inactiva")
        </dd>
    </dl>
    @if ((bool)pregunta.Activa && pregunta.MiembroId != UsuarioId )
    {
        <a class="btn btn-success text-white" asp-controller="Respuestas" asp-action="Create" asp-route-id="@pregunta.PreguntaId">Responder</a>
    }
    <div align="right">
        @if (User.IsInRole("Miembro") && pregunta.MiembroId == UsuarioId)
        {
            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@pregunta.PreguntaId">Editar</a>
        }
        else if (UsuarioId == 0)
        {
            @if (User.Identity.IsAuthenticated)
            {
                <a class="btn btn-success text-white" asp-controller="Respuestas" asp-action="Create" asp-route-id="@pregunta.PreguntaId">Responder</a>
            }
        }
        <a class="btn btn-primary" asp-controller="Entradas" asp-action="Details" asp-route-id="@pregunta.EntradaId">Atrás</a>
    </div>
    <br />
    <h1 class="text-center">Respuestas</h1>
    <div>
        @foreach (var unaRespuesta in Model.OrderBy(p => p.Fecha))
        {
            var totalLikes = unaRespuesta.Reacciones.Count(r => r.MeGusta.HasValue && r.MeGusta.Value);
            var totalDislikes = unaRespuesta.Reacciones.Count(r => r.MeGusta.HasValue && !r.MeGusta.Value);

            var isLikeRow = unaRespuesta.RespuestaId == respuestaMasLikes && totalLikes >= totalDislikes && totalLikes > 0;
            var isDislikeRow = unaRespuesta.RespuestaId == respuestaMasDislike && totalDislikes > totalLikes && totalDislikes > 0;


            <div class="response-card @(isLikeRow ? "like-row" : isDislikeRow ? "dislike-row" : "")">
                <div class="response-card-header">
                    @unaRespuesta.Miembro.UserName - @unaRespuesta.Fecha.ToShortDateString()
                </div>
                <div class="response-card-body">
                    <p>@unaRespuesta.Descripcion</p>
                    <div class="response-actions">
                        <form method="post" asp-controller="Reacciones" asp-action="Like" style="display:inline;">
                            <input type="hidden" name="respuestaId" value="@unaRespuesta.RespuestaId" />
                            <button type="submit" class="btn btn-success">
                                Like <span class="@(unaRespuesta.Reacciones.Any(r => r.MiembroId == UsuarioId && r.MeGusta.HasValue && (bool)r.MeGusta) ? "liked" : "")"></span>
                            </button>
                        </form>
                       
                        <form method="post" asp-controller="Reacciones" asp-action="Dislike" style="display:inline;">
                            <input type="hidden" name="respuestaId" value="@unaRespuesta.RespuestaId" />
                            <button type="submit" class="btn btn-danger">
                                Dislike <span class="@(unaRespuesta.Reacciones.Any(r => r.MiembroId == UsuarioId && r.MeGusta.HasValue && !(bool)r.MeGusta) ? "disliked" : "")"></span>
                            </button>
                        </form>
                     

                        <span>
                            @totalLikes Likes / @totalDislikes Dislikes
                        </span>
                    </div>
                </div>
            </div>
        }

    </div>
    <p>Se encontraron: @Model.Count() Respuestas en esta Pregunta</p>
</div>
