
@using Microsoft.AspNetCore.Identity
@inject UserManager<Miembro> UserManager

@model Entrada

@{
    bool isPrivada = (bool)Model.Privada;
    var userId = User.Identity.IsAuthenticated ? int.Parse(User.Claims.First().Value) : -1;
    var miembroHabilitado = Model.MiembrosHabilitados?.Any(mh => mh.MiembroId == userId && mh.Habilitado) ?? false;
    var miembroNoHabilitado = Model.MiembrosHabilitados?.Any(mh => mh.MiembroId == userId && !mh.Habilitado) ?? false;
    var esMiEntrada = Model.MiembroId == userId;
}

@if (isPrivada)
{
    if (User.IsInRole(Config.MiembroRolName))
    {
        if (esMiEntrada)
        {
            <a asp-controller="Entradas" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-purple">Mi Entrada</a>
            <a asp-controller="Entradas" asp-action="SolicitudesPendientes" asp-route-id="@Model.Id" class="btn btn-purple">Solicitudes pendientes</a>
        }
        else
        {
            if (miembroHabilitado)
            {
                <a asp-controller="Entradas" asp-action="Details" asp-route-id="@Model.Id" class="btn peach-button">Aprobada</a>
            }
            else if (miembroNoHabilitado)
            {
                <a class="btn privacy-btn privada">Pendiente de aprobación</a>
            }
            else
            {
                <a id="btnAprobacion" asp-controller="Entradas" asp-action="SolicitarAprobacion" asp-route-id="@Model.Id" class="btn privacy-btn privada">Privada</a>
            }
        }
    }
    else
    {
        <a id="btnAprobacion" asp-route-id="@Model.Id" class="btn privacy-btn privada">Privada</a>
    }
}
else
{
    <a asp-controller="Entradas" asp-action="Details" asp-route-id="@Model.Id" class="btn privacy-btn publica">Pública</a>
}
